#pragma once

//============================================================================*/
//	include
//============================================================================*/
#include <Game/Editor/Base/BaseEditor.h>
#include <Game/Objects/Enemy/Enemy.h>

// c++
#include <memory>
#include <list>

//============================================================================*/
//	EnemyManager class
//============================================================================*/
class EnemyManager :
	public BaseEditor {
public:
	//========================================================================*/
	//	public Methods
	//========================================================================*/

	EnemyManager() = default;
	~EnemyManager() = default;

	void Init();

	void Update();

	void ImGui() override;

private:
	//========================================================================*/
	//	private Methods
	//========================================================================*/

	//========================================================================*/
	//* variables

	std::list<std::unique_ptr<Enemy>> enemies_;
	uint32_t enemyIndex_;

};
#pragma once

//============================================================================*/
//	include
//============================================================================*/

// imgui
#include <imgui.h>

// c++
#include <string>

//============================================================================*/
//	BaseEditor class
//============================================================================*/
class BaseEditor {
public:
	//========================================================================*/
	//	public Methods
	//========================================================================*/

	BaseEditor() = default;
	virtual ~BaseEditor();

	void SetEditor(const std::string& name);

	//* imgui *//

	virtual void ImGui() = 0;

	//* getter *//

	std::string GetName() const { return name_; }

protected:
	//========================================================================*/
	//	protected Methods
	//========================================================================*/

	//===================================================================*/
	///* variables

	std::string parentFolderName_;

private:
	//========================================================================*/
	//	private Methods
	//========================================================================*/

	//===================================================================*/
	///* variables

	std::string name_;

};